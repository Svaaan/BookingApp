@page "/"
@using Booking.Api.Data
@using Booking.Api.Entities
@using Booking.Api.Repositories
@using Booking.Api.Repositories.Interfaces
@using Microsoft.AspNetCore.Components.Forms
@using Booking.View.Request
@using Booking.View.DTO
@inject BookerRequest BookerRequest
@inject ILogger<BookerDTO> Logger

@inject CinemaDbContext dbContext

<style>
    body {
        margin-top: 125px;
        background-color: #f8f9fa;
    }

    .container {
        margin-top: 50px;
    }

    .card {
        background-color: #ffffff;
        border: 2px solid #000000;
        border-radius: 8px;
        margin: 100px;
    }

    .card-title {
        color: black;
    }

    .form-label {
        color: #343a40;
        font-weight: bold;
    }

    .form-control {
        background-color: #f1f3f5;
    }

    .custom-button {
        background-color: white;
        color: black;
        border: 2px solid black;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 8px;
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        margin-top: 45px;
    }

        .custom-button:hover {
            background-color: black;
            color: white;
            border-color: white;
        }

        .custom-button:active {
            transform: translateY(2px);
        }

    .success-message {
        color: green;
        font-size: 20px;
        margin-top: 20px;
    }
</style>


<div class="container">
    <div class="card mx-auto mt-5" style="max-width: 500px;">
        <div class="card-body">
            <h5 class="card-title text-center">Booking Form</h5>
            <EditForm Model="@booker" OnValidSubmit="@SubmitForm" FormName="BookerDTO">
                <div class="mb-3">
                    <label for="Name" class="form-label">Namn:</label>
                    <InputText type="text" id="Name" class="form-control" @bind-Value="booker.Name" required />
                </div>

                <div class="mb-3">
                    <label for="LastName" class="form-label">Efternamn:</label>
                    <InputText type="text" id="LastName" class="form-control" @bind-Value="booker.LastName" required />
                </div>

                <div class="mb-3">
                    <label for="Email" class="form-label">Email:</label>
                    <InputText type="email" id="Email" class="form-control" @bind-Value="booker.Email" required />
                </div>

                <div class="mb-3">
                    <label for="PhoneNumber" class="form-label">Telefon nummer:</label>
                    <InputText type="tel" id="PhoneNumber" class="form-control" @bind-Value="booker.PhoneNumber" required />
                </div>

                <div class="mb-3 text-center">
                    <button type="submit" class="custom-button">Submit Booking</button>
                </div>
            </EditForm>
       
            @if (!string.IsNullOrWhiteSpace(successMessage))
            {
                <div class="success-message">
                    @successMessage
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(errorMessage))
            {
                <div class="error-message">
                    @errorMessage
                </div>
            }
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public BookerDTO booker { get; set; }
    private EditContext editContext;
    private string successMessage = "";
    private string errorMessage = "";

    protected override void OnInitialized() => booker ??= new BookerDTO();

    private async Task SubmitForm()
    {
        try
        {
            var postForm = await BookerRequest.RequestBooking(booker);
            if (postForm)
            {
             
                successMessage = "Booking successful!";
                errorMessage = ""; 
            }
            else
            {
                successMessage = "";
                errorMessage = "Booking failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "An error occurred while submitting the booking form.");
            successMessage = ""; 
            errorMessage = "An unexpected error occurred. Please try again later.";
        }
    }
}
