@page "/"
@using Booking.Api.Data
@using Booking.Api.Entities
@inject CinemaDbContext DbContext

<style>
    body {
        margin-top: 125px;
        background-color: #f8f9fa;
    }

    .container {
        margin-top: 50px;
    }

    .card {
        background-color: #ffffff;
        border: 2px solid #000000;
        border-radius: 8px;
        margin: 100px;
    }

    /* Blue card title */
    .card-title {
        color: black;
    }

    /* Dark form label */
    .form-label {
        color: #343a40;
        font-weight: bold;
    }

    .form-control {
        background-color: #f1f3f5;
    }

    .custom-button {
        background-color: white;
        color: black;
        border: 2px solid black;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 8px;
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        margin-top: 45px;
    }

        .custom-button:hover {
            background-color: black;
            color: white;
            border-color: white;
        }

        .custom-button:active {
            transform: translateY(2px);
        }

    .success-message {
        color: green;
        font-size: 20px;
        margin-top: 20px;
    }
</style>

<div class="container">
    <div class="card mx-auto mt-5" style="max-width: 500px;">
        <div class="card-body">
            @if (bookingSubmitted)
            {
                <h5 class="card-title text-center success-message">Thank you for booking!</h5>
            }
            else
            {
                <h5 class="card-title text-center">Booking Form</h5>
                <form onvalidform="@SubmitBooking">
                    <div class="mb-3">
                        <label for="Name" class="form-label">Namn:</label>
                        <input type="text" id="Name" class="form-control" @bind="bookingData.Name" required />
                    </div>

                    <div class="mb-3">
                        <label for="LastName" class="form-label">Efternamn:</label>
                        <input type="text" id="LastName" class="form-control" @bind="bookingData.LastName" required />
                    </div>

                    <div class="mb-3">
                        <label for="Email" class="form-label">Email:</label>
                        <input type="email" id="Email" class="form-control" @bind="bookingData.Email" required />
                    </div>

                    <div class="mb-3">
                        <label for="PhoneNumber" class="form-label">Telefon nummer:</label>
                        <input type="tel" id="PhoneNumber" class="form-control" @bind="bookingData.PhoneNumber" required />
                    </div>

                    <div class="mb-3 text-center">
                        <button type="submit" class="custom-button">Submit Booking</button>
                    </div>
                </form>
            }
        </div>
    </div>
</div>

@code {
    private bool bookingSubmitted = false;
    public Booker bookingData = new Booker();

    private async Task SubmitBooking()
    {
        DbContext.bookers.Add(bookingData);
        await DbContext.SaveChangesAsync();
        bookingData = new Booker();
        bookingSubmitted = true;
    }
}