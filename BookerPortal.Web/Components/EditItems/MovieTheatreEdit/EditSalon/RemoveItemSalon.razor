@using Request.HTTP.RequestService.IRequestService
@using Request.HTTP.DTO.MovieTheatreDTO
@using System.Net.Http
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@rendermode InteractiveServer
@inject ISalonService SalonService

<style>
    .confirmation-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        width: 40%;
        max-height: 80%;
        overflow-y: auto;
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        z-index: 1001;
        text-align: center;
    }

    .modal-body {
        margin-bottom: 10px;
    }

    .modal-footer {
        display: flex;
        justify-content: center;
    }

        .modal-footer button {
            margin: 0 5px;
        }
</style>

<td>
    <button class="btn btn-danger" @onclick="ShowConfirmationModal">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
            <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
        </svg>
    </button>
</td>

<!-- Confirmation Modal -->
@if (showConfirmationModal)
{
    <div class="confirmation-modal">
        <div class="modal-overlay"></div>
        <div class="modal-content">
            <div class="modal-body">
                <div class="warning-text">
                    <div>
                        <span style="color: red; font-size: 1.5em;">Warning</span>
                    </div>

                    <span style="color: red;">Removing this item will affect the corresponding ID of other related items in the database. Please confirm that you want to proceed.</span>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" @onclick="RemoveSalon">Confirm Removal</button>
                <button class="btn btn-secondary" @onclick="HideConfirmationModal">Cancel</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public SalonDTO salonDTO { get; set; }
    [Parameter]
    public EventCallback<int> OnRemove { get; set; }

    private bool showConfirmationModal = false;

    private async Task RemoveSalon()
    {
        try
        {
            await SalonService.RemoveSalonById(salonDTO.Id);
            await OnRemove.InvokeAsync();
            showConfirmationModal = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void ShowConfirmationModal()
    {
        showConfirmationModal = true;
    }

    private void HideConfirmationModal()
    {
        showConfirmationModal = false;
    }
}
