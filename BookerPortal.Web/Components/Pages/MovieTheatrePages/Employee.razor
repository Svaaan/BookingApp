@page "/employee"
@using Request.HTTP.RequestService.IRequestService
@using Request.HTTP.DTO.MovieTheatreDTO
@using BookerPortal.Web.Components.EditItems.MovieTheatreEdit.EditEmployee
@rendermode InteractiveServer
@inject IEmployeeService employeeService
@inject NavigationManager Navigation
@attribute [StreamRendering]
@attribute [Authorize(Roles = "Admin,Manager")]
<PageTitle>Anställda</PageTitle>

@if (employee != null)
{
    <table class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in employee)
            {
                <tr>
                    @if (isEditMode && selectedId == item.Id)
                    {
                        <td>@item.Id</td>               
                        <td><input class="form-control" @bind="item.Name" /></td>
                        <td><input class="form-control" @bind="item.LastName" /></td>
                        <td><input class="form-control" @bind="item.Email" /></td>
                        <td><input class="form-control" @bind="item.Role" /></td>
                        <td>
                            <EditItemEmployee employeeDTO="item" OnEdited=@OnEdited></EditItemEmployee>
                        </td>
                        
                    }
                    else
                    {
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.LastName</td>
                        <td>@item.Email</td>
                        <td>@item.Role</td>
                        <td>
                            <button class="btn btn-success btn-sm" @onclick="NavigateToAddPage">Lägg till</button>
                            <button class="btn btn-warning btn-sm" @onclick="() => SetEditMode(item)">Redigera</button>
                            @if (!isEditMode || selectedId != item.Id)
                            {
                                <RemoveItemEmployee employeeDTO="item" OnRemove=@OnRemove></RemoveItemEmployee>
                            }
                            
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<EmployeeDTO> employee;
    private string errorMessage;
    private bool isEditMode;
    private int selectedId = 0;

    private async Task LoadEmployees()
    {
        try
        {
            employee = await employeeService.GetEmployee();
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while retrieving data. Please try again later.";
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
    }

    protected async Task OnRemove()
    {
        await LoadEmployees();
    }

    protected async Task OnEdited()
    {
        selectedId = 0;
        isEditMode = false;
        await LoadEmployees();
    }

    protected void SetEditMode(EmployeeDTO employeeDTO)
    {
        selectedId = employeeDTO.Id;
        isEditMode = true;
    }
    protected void NavigateToAddPage()
    {
        Navigation.NavigateTo("/add-item-employee");
    }
}
