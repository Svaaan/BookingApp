@page "/employee"
@using Request.HTTP.RequestService.IRequestService
@using Request.HTTP.DTO.MovieTheatreDTO
@using BookerPortal.Web.Components.EditItems.MovieTheatreEdit.EditEmployee
@rendermode InteractiveServer
@inject IEmployeeService employeeService
@inject NavigationManager Navigation
@attribute [StreamRendering]
@attribute [Authorize(Roles = "Admin,Manager")]
<PageTitle>Anställda</PageTitle>

@if (employee != null)
{
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Last name</th>
                    <th>Email</th>
                    <th>Role</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in employee)
                {
                    if (item != null)
                    {
                        <tr>
                            @if (isEditMode && selectedId == item.Id)
                            {
                                <td><input @bind="item.Id" /></td>
                                <td><input @bind="item.Name" /></td>
                                <td><input @bind="item.LastName" /></td>
                                <td><input @bind="item.Email" /></td>
                                <td><input @bind="item.Role" /></td>
                                <EditItemEmployee employeeDTO="item" OnEdited=@OnEdited></EditItemEmployee>
                            }
                            else
                            {
                                <td class="smooth-text">@item.Id</td>
                                <td class="smooth-text">@item.Name</td>
                                <td class="smooth-text">@item.LastName</td>
                                <td class="smooth-text">@item.Email</td>
                                <td class="smooth-text">@item.Role</td>
                                <td>
                                    <div style="display:flex; align-items: center;">
                                        <button class="btn btn-success" @onclick="NavigateToAddPage" style="margin-right:10px">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-square" viewBox="0 0 16 16">
                                                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                                            </svg>
                                        </button>

                                        <button class="btn btn-warning" @onclick="() => SetEditMode(item)" style="margin-right:10px">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                                <path d="M12.354 1.646a.5.5 0 0 1 0 .708l-9 9a.5.5 0 0 1-.708-.708l9-9a.5.5 0 0 1 .708 0zm-1.708.708L3 11.5v1.5a.5.5 0 0 0 .5.5H5l9.146-9.146-1.5-1.5z" />
                                            </svg>
                                        </button>
                                        <RemoveItemEmployee employeeDTO="item" OnRemove=@OnRemove></RemoveItemEmployee>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<EmployeeDTO> employee;
    private string errorMessage;
    private bool isEditMode;
    private int selectedId = 0;

    private async Task LoadEmployees()
    {
        try
        {
            employee = await employeeService.GetEmployee();
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while retrieving data. Please try again later.";
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
    }

    protected async Task OnRemove()
    {
        await LoadEmployees();
    }

    protected async Task OnEdited()
    {
        selectedId = 0;
        isEditMode = false;
        await LoadEmployees();
    }

    protected void SetEditMode(EmployeeDTO employeeDTO)
    {
        selectedId = employeeDTO.Id;
        isEditMode = true;
    }
    protected void NavigateToAddPage()
    {
        Navigation.NavigateTo("/add-item-employee");
    }
}
