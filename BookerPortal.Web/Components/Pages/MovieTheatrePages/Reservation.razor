@page "/reservation"
@using Request.HTTP.RequestService.IRequestService
@using Request.HTTP.DTO.MovieTheatreDTO
@using BookerPortal.Web.Components.EditItems.MovieTheatreEdit.EditReservation
@rendermode InteractiveServer
@inject IReservationService reservationService
@attribute [StreamRendering]
@attribute [Authorize(Roles = "Admin,Manager")]
<PageTitle>Reservationer</PageTitle>

@if (reservations != null)
{
    <table class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>ID</th>
                <th>Booker ID</th>
                <th>Show ID</th>
                <th>Platser</th>
                <th>Tid</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in reservations)
            {
                <tr>
                    @if (isEditMode && selectedId == item.Id)
                    {
                        <td>@item.Id</td>
                        <td>@item.BookerId</td>
                        <td><input class="form-control" @bind="item.ShowId" /></td>
                        <td><input class="form-control" @bind="item.BookedSeats"/></td>
                        <td><input class="form-control" @bind="item.ReservationTime" /></td>
                        <td>
                            <EditItemReservation reservationDTO="item" OnEdited=@OnEdited></EditItemReservation>
                        </td>
                        
                    }
                    else
                    {
                        <td>@item.Id</td>
                        <td>@item.BookerId</td>
                        <td>@item.ShowId</td>
                        <td>@item.BookedSeats</td>
                        <td>@item.ReservationTime</td>

                        <td>
                            <button class="btn btn-warning btn-sm" @onclick="() => SetEditMode(item)">Redigera</button>
                            @if (!isEditMode || selectedId != item.Id)
                            {
                                <RemoveItemReservation reservationDTO="item" OnRemove=@OnRemove></RemoveItemReservation>
                            }
                            
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PresentReservationDTO> reservations;
    private string errorMessage;
    private bool isEditMode;
    private int selectedId = 0;

    private async Task LoadReservation()
    {
        try
        {
            reservations = await reservationService.GetReservation();

        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while retrieving data. Please try again later.";

            Console.WriteLine($"Error: {ex.Message}");
        }
    }


    protected override async Task OnInitializedAsync()
    {
        await LoadReservation();
    }

    protected async Task OnRemove()
    {
        await LoadReservation();

    }

    protected async Task OnEdited()
    {
        selectedId = 0;
        isEditMode = false;
        await LoadReservation();

    }

    protected async Task SetEditMode(PresentReservationDTO reservationDTO)
    {
        selectedId = reservationDTO.Id;
        isEditMode = true;

    }
}


