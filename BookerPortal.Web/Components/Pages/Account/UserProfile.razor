@page "/Profile"
@using System.Collections.Generic
@using System.Security.Claims
@using Booking.Api.Data
@using Booking.Api.Entities
@using Microsoft.EntityFrameworkCore
<h1>Welcome</h1>
<div class="card">
    <div class="card-body">
        <div class="text-center justify-content-center">
            <div class="d-flex flex-column align-items-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="146" height="156" fill="#ADD8E6" class="bi bi-person-badge" viewBox="0 0 16 16">
                    <path d="M6.5 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1zM11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                    <path d="M4.5 0A2.5 2.5 0 0 0 2 2.5V14a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2.5A2.5 2.5 0 0 0 11.5 0zM3 2.5A1.5 1.5 0 0 1 4.5 1h7A1.5 1.5 0 0 1 13 2.5v10.795a4.2 4.2 0 0 0-.776-.492C11.392 12.387 10.063 12 8 12s-3.392.387-4.224.803a4.2 4.2 0 0 0-.776.492z" />
                </svg>
            </div>
            @if (user != null)
            {
                <p>Email: @user.Email</p>
                <p>Name: @user.Name</p>
                <p>Role: @user.Role</p>
            }
            else
            {
                <p>No user found.</p>
            }
        </div>
    </div>
</div>

@code {
    private User user;

    [Inject]
    private CinemaDbContext cinemaDbContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var userEmail = "john@example.com";
        user = await cinemaDbContext.users.FirstOrDefaultAsync(u => u.Email == userEmail);
    }
}