@page "/booking"
@using Request.HTTP
@using Request.HTTP.DTO.MovieTheatreDTO
<PageTitle>Bokningar</PageTitle>


@if (bookers != null)
{
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Phone Number</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in bookers)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.LastName</td>
                        <td>@item.Email</td>
                        <td>@item.PhoneNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<BookerDTO> bookers;

    [Inject]
    private IBookerService bookerService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            bookers = await bookerService.GetBooker();

            if (bookers != null)
            {
                for (int i = bookers.Count - 1; i >= 0; i--)
                {
                    var booker = bookers[i];
                    if (booker == null || string.IsNullOrWhiteSpace(booker.Name) || string.IsNullOrWhiteSpace(booker.LastName) || string.IsNullOrWhiteSpace(booker.Email) || string.IsNullOrWhiteSpace(booker.PhoneNumber))
                    {
                        bookers.RemoveAt(i);
                    }
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}

