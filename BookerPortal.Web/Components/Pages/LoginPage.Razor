@page "/loginpage"
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
<style>
    body {
        margin-top: 10px;
        background-color: #f8f9fa;
    }

    .container {
        margin-top: 25px;
    }

    .card {
        background-color: #ffffff;
        border: 2px solid #000000;
        border-radius: 8px;
        margin: 100px;
    }

    .card-title {
        color: black;
    }

    .form-label {
        color: #343a40;
        font-weight: bold;
    }

    .form-control {
        background-color: #f1f3f5;
    }

    .custom-button {
        background-color: white;
        color: black;
        border: 2px solid black;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 8px;
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        margin-top: 30px;
    }

        .custom-button:hover {
            background-color: black;
            color: white;
            border-color: white;
        }

        .custom-button:active {
            transform: translateY(2px);
        }

    .success-message {
        color: green;
        font-size: 20px;
        margin-top: 10px;
    }

    .error-message {
        color: red;
        font-size: 20px;
        margin-top: 10px;
    }
</style>


<div class="container">
    <div class="card mx-auto mt-5" style="max-width: 500px;">
        <div class="card-body">
            <EditForm Model="@loginModel" OnValidSubmit="@Login" FormName="Login">
                <div class="mb-3">
                    <label for="Email" class="form-label">Email:</label>
                    example@example.com
                    <InputText type="email" id="Email" class="form-control" @bind-Value="loginModel.Email" required />
                </div>

                <div class="mb-3">
                    <label for="Password" class="form-label">Password:</label>
                    password
                    <InputText type="password" id="Password" class="form-control" @bind-Value="loginModel.Password" required />
                </div>

                <div class="mb-3 text-center">
                    <button type="submit" class="custom-button">Login</button>
                </div>
            </EditForm>

            <div style="text-align: center; display: flex; align-items: center; flex-direction: column;">
                @if (!string.IsNullOrWhiteSpace(errorMessage))
                {
                    <div class="error-message">
                        @errorMessage
                    </div>
                }
                else if (loginSuccess)
                {
                    <div class="success-message">
                        Login successful!
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel loginModel { get; set; } = new LoginModel();

    private string errorMessage = "";
    private bool loginSuccess = false;

    private async Task Login()
    {
        try
        {
            if (loginModel.Email == "example@example.com" && loginModel.Password == "password")
            {

                loginSuccess = true;
                Thread.Sleep(500);
                NavigationManager.NavigateTo("/booking");
            }
            else
            {
                errorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}